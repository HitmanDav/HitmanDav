import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from keyboards import get_reply_keyboard, get_inline_keyboard
from states import Form

TOKEN = "6869395577:AAGJP86Zqa-B7T2uxBCbdua_xuTjJEzKtNE"

bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

@dp.message(Command("start"))
async def start(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É:", reply_markup=get_reply_keyboard())

@dp.message(Command("button"))
async def send_inline_button(message: Message):
    await message.answer("–í–æ—Ç —Ç–≤–æ—è –∫–Ω–æ–ø–∫–∞:", reply_markup=get_inline_keyboard())

@dp.callback_query(F.data == "button_pressed")
async def button_pressed(callback: CallbackQuery):
    await callback.answer("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞")
    await callback.message.answer("–¢—ã –±–æ–ª—å—à–æ–π –º–æ–ª–æ–¥–µ—Ü!")

# –ù–∞—á–∞–ª–æ –∞–Ω–∫–µ—Ç—ã –ø–æ –∫–æ–º–∞–Ω–¥–µ /form
@dp.message(Command("form"))
async def start_form(message: Message, state: FSMContext):
    await state.set_state(Form.name)
    await message.answer("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")

# –ü—Ä–∏–Ω–∏–º–∞–µ–º –∏–º—è –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç
@dp.message(StateFilter(Form.name))
async def form_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(Form.age)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")

# –ü—Ä–∏–Ω–∏–º–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–æ—Ä–æ–¥
@dp.message(StateFilter(Form.age))
async def form_age(message: Message, state: FSMContext):
    if not message.text.isdigit():
        await message.answer("–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:")
        return

    await state.update_data(age=int(message.text))
    await state.set_state(Form.city)
    await message.answer("–ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?")

# –ü—Ä–∏–Ω–∏–º–∞–µ–º –≥–æ—Ä–æ–¥ –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –∞–Ω–∫–µ—Ç—É
@dp.message(StateFilter(Form.city))
async def form_city(message: Message, state: FSMContext):
    await state.update_data(city=message.text)
    data = await state.get_data()

    await message.answer(f"–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã! –í–æ—Ç —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n"
                         f"üë§ –ò–º—è: {data['name']}\n"
                         f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n"
                         f"üèôÔ∏è –ì–æ—Ä–æ–¥: {data['city']}")
    await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥–µ—Ç –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())